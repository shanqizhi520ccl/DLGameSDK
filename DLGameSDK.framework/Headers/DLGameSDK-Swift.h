#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
#ifndef DLGAMESDK_SWIFT_H
#define DLGAMESDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="DLGameSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)




typedef SWIFT_ENUM(NSInteger, DLEnterVoiceRoomType, closed) {
/// 未知类型
  DLEnterVoiceRoomTypeUnknow = 0,
/// 首页正常进入
  DLEnterVoiceRoomTypeHomePage = 1,
/// 站外邀请
  DLEnterVoiceRoomTypeOutSideLink = 2,
/// 聊天列表邀请
  DLEnterVoiceRoomTypeInSideLink = 3,
/// 红包跑马灯进入
  DLEnterVoiceRoomTypeRedPackageMarquee = 4,
/// 礼物跑马灯进入
  DLEnterVoiceRoomTypeGiftMarquee = 5,
};

typedef SWIFT_ENUM(NSInteger, DLExitVoiceRoomType, closed) {
/// 未知类型
  DLExitVoiceRoomTypeUnknow = 0,
/// 正常退出，需要有一个二次确认
  DLExitVoiceRoomTypeNormal = 1,
/// 账号被踢了
  DLExitVoiceRoomTypeKickout = 2,
/// 异常的退出情况
  DLExitVoiceRoomTypeException = 3,
/// 无需二次确认
  DLExitVoiceRoomTypeJustQuit = 4,
/// 房间切换的类型
  DLExitVoiceRoomTypeSwitchRoom = 5,
/// 直接去接了电话
  DLExitVoiceRoomTypeGoToRTC = 6,
/// 用户被封禁
  DLExitVoiceRoomTypeBlocked = 7,
/// 游戏匹配中
  DLExitVoiceRoomTypeGameMatching = 8,
/// 我自己用，上报日志
  DLExitVoiceRoomTypeVoiceNil = 100,
};

@class NSString;

SWIFT_CLASS("_TtC9DLGameSDK16DLGameAlbumModel")
@interface DLGameAlbumModel : NSObject
/// 相册的id
@property (nonatomic) NSInteger albumID;
/// 资源的类型，0突破
@property (nonatomic) NSInteger albumResType;
/// 当前的缩略图
@property (nonatomic, copy) NSString * _Nonnull thumbnail;
/// 资源的地址，图片是当前图片
@property (nonatomic, copy) NSString * _Nonnull src;
/// 视频的hls地址
@property (nonatomic, copy) NSString * _Nonnull hlsUrl;
/// 图片审核状态0：未审核 1：审核通过 2：审核不通过(获取他人的无此字段)
@property (nonatomic) NSInteger auditStatus;
/// 状态，1未评价，2已评价（喜欢）
@property (nonatomic) NSInteger likeStatus;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9DLGameSDK24DLGameSDKAchievementInfo")
@interface DLGameSDKAchievementInfo : NSObject
@property (nonatomic) NSInteger certification;
@property (nonatomic) NSInteger isVip;
@property (nonatomic) NSInteger charmLevel;
/// 点赞数
@property (nonatomic) int64_t albumLikes;
@property (nonatomic, copy) NSString * _Nonnull headWear;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DLGameSDKConfigUser;
@class DLGameSDKLocationConfig;

/// SDK配置的类
SWIFT_CLASS("_TtC9DLGameSDK15DLGameSDKConfig")
@interface DLGameSDKConfig : NSObject
/// appId
@property (nonatomic) int64_t appID;
/// 是否开启了shenhe服务
@property (nonatomic) NSInteger underReview;
/// 用户的信息
@property (nonatomic, strong) DLGameSDKConfigUser * _Nullable userInfo;
/// dubug：是否打印日志(默认开启)
@property (nonatomic) BOOL isLogEnable;
/// 是否是测试环境
@property (nonatomic) BOOL isTestEnvir;
/// 经纬度信息
@property (nonatomic, strong) DLGameSDKLocationConfig * _Nullable locationInfo;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9DLGameSDK19DLGameSDKConfigUser")
@interface DLGameSDKConfigUser : NSObject
/// 用户的凭证
@property (nonatomic, copy) NSString * _Nonnull appAuthorized;
/// 用户的id
@property (nonatomic, copy) NSString * _Nonnull uid;
/// 用户的昵称
@property (nonatomic, copy) NSString * _Nonnull nickName;
/// 用户的头像地址
@property (nonatomic, copy) NSString * _Nonnull avatar;
@property (nonatomic) NSInteger isTest;
/// 邀请码
@property (nonatomic, copy) NSString * _Nonnull inviteCode;
/// 地区标识
@property (nonatomic, copy) NSString * _Nonnull region;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9DLGameSDK23DLGameSDKLocationConfig")
@interface DLGameSDKLocationConfig : NSObject
/// 经度
@property (nonatomic, copy) NSString * _Nonnull longitude;
/// 纬度
@property (nonatomic, copy) NSString * _Nonnull latitude;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol DLGameSDKManagerDelegate;
@class DLGameSDKUser;

SWIFT_CLASS("_TtC9DLGameSDK16DLGameSDKManager")
@interface DLGameSDKManager : NSObject
/// 单利对象
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DLGameSDKManager * _Nonnull manager;)
+ (DLGameSDKManager * _Nonnull)manager SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// 测试代码 ===============================
- (DLGameSDKConfigUser * _Nullable)getCurrentUser SWIFT_WARN_UNUSED_RESULT;
/// 测试代码
- (void)testInitWithUid:(NSString * _Nonnull)uid success:(void (^ _Nonnull)(NSString * _Nonnull))success failed:(void (^ _Nonnull)(NSString * _Nonnull, NSInteger))failed;
/// 是否支持竖屏
///
/// returns:
/// 返回是否支持
- (BOOL)supportPortrait SWIFT_WARN_UNUSED_RESULT;
/// 初始化当前游戏的SDK
/// \param config 当前的config配置
///
/// \param delegate 代理回掉方法
///
- (void)initGameSDKWithConfig:(DLGameSDKConfig * _Nonnull)config delegate:(id <DLGameSDKManagerDelegate> _Nonnull)delegate SWIFT_METHOD_FAMILY(none);
/// 冷启动，更新当前的邀请码
/// \param inviteCode 
///
- (void)updateCurrentInviteCodeWithInviteCode:(NSString * _Nonnull)inviteCode;
/// 显示SDK的主要页面
- (BOOL)showSDKGameMainPage SWIFT_WARN_UNUSED_RESULT;
/// 游戏方需要退出登陆
- (void)logoutGame;
/// 隐藏当前的页面
- (void)dismissSDKGameMainPage;
/// 选中某一个用户送礼
/// \param selectedUser 选中的用户
///
- (BOOL)showGameRoomGiftInfoSelectedWithSelectedUser:(NSDictionary<NSString *, id> * _Nonnull)selectedUser SWIFT_WARN_UNUSED_RESULT;
/// 是否显示礼物面板等信息
/// \param show 显示还是隐藏
///
- (BOOL)showGameRoomGiftInfoPageWithShow:(BOOL)show multiUsers:(NSArray * _Nonnull)multiUsers SWIFT_WARN_UNUSED_RESULT;
/// 新进入局内用户信息
/// \param users users
///
- (BOOL)checkInGameNewUserInfosEffectsWithUsers:(NSArray * _Nonnull)users SWIFT_WARN_UNUSED_RESULT;
/// 收到外部的麻将游戏显示的消息
/// \param msgInfo 消息信息
///
- (void)gameRoomDidReceiveMsgWithMsgInfo:(NSDictionary<NSString *, id> * _Nonnull)msgInfo;
/// 获取好友列表的接口
/// \param page 当前的page 从1开始
///
/// \param completed 闭包回掉
///
- (void)getCurrentUserFriendListWithPage:(NSInteger)page completed:(void (^ _Nonnull)(NSArray<DLGameSDKUser *> * _Nonnull))completed;
/// 设置当前礼物面板效果的开关
/// \param type 0 是文字开关 1 是礼物播放效果开关 2 入场特效开关
///
/// \param swich 是否开
///
- (void)setGiftPanelControllerSwitchWithType:(NSInteger)type swich:(BOOL)swich;
/// 用户手动点击触发显示用户的礼物面板
/// 在用户进入游戏中的时候，显示
- (void)startShowGiftPanelController;
/// 在直播间显示cp页面送礼的操作
/// \param sendUid 接受礼物的uid
///
/// \param giftId 送礼的id
///
/// \param amount 连送的个数
///
/// \param nickname 接收礼物的用戶暱稱
///
- (void)showStartCPPageSendGiftControllerWithSendUid:(int64_t)sendUid giftId:(int64_t)giftId amount:(NSInteger)amount nickname:(NSString * _Nonnull)nickname;
/// 显示当前用户的profile页面
/// \param userId 当前用户的信息
///
- (void)showUserInfoProfileWithUserId:(NSInteger)userId;
/// 显示用户编辑页面
- (void)showUserProfileSettingPage;
/// 显示用户的im页面
- (void)showIMMainPage;
/// 更新当前用户的游戏状态
/// \param state 游戏状态 0非游戏状态 1游戏中 2游戏准备中
///
/// \param gameType 游戏房间状态 0 普通场 1 点券场
///
/// \param completed 是否更新成功
///
- (void)updateUserGameStateWithState:(NSInteger)state gameType:(NSInteger)gameType completed:(void (^ _Nullable)(BOOL))completed;
/// 返回当前的视频拨打状态
///
/// returns:
/// 返回状态码
- (NSInteger)getRTCCallingState SWIFT_WARN_UNUSED_RESULT;
/// 手动关闭当前RTC的页面
- (void)hangUPRtcConnection;
/// 查询用户的信息
/// \param userId 当前用户的userID
///
- (void)getUserProfileInfoWithUserId:(NSInteger)userId completed:(void (^ _Nonnull)(DLGameSDKUser * _Nonnull))completed;
/// 从sdk外部打开url的浏览器
/// \param url 地址
///
- (void)showSDKWebControllerPageWithUrl:(NSString * _Nonnull)url;
@end


@interface DLGameSDKManager (SWIFT_EXTENSION(DLGameSDK))
/// 外部获取SDK版本号
- (NSString * _Nonnull)getSDKVersion SWIFT_WARN_UNUSED_RESULT;
/// 外部设置经纬度，可提前配置
- (void)setSDKLocationWithLongitude:(NSString * _Nonnull)longitude latitude:(NSString * _Nonnull)latitude;
/// 获取消息未读数
///
/// returns:
/// 未读数
- (uint64_t)getIMMsgUnReadCount SWIFT_WARN_UNUSED_RESULT;
@end


@interface DLGameSDKManager (SWIFT_EXTENSION(DLGameSDK))
/// 获取用户的照片信息
/// \param userId 当前用户的id
///
/// \param page 当前的page
///
/// \param pageSize 每页的大小
///
/// \param cpmpleted 闭包回掉
///
- (void)getUserAlbumListWithUserId:(int64_t)userId page:(NSInteger)page pageSize:(NSInteger)pageSize completed:(void (^ _Nonnull)(BOOL, NSArray<DLGameAlbumModel *> * _Nonnull))completed;
/// 点赞相册资源
/// \param albumID 资源id
///
/// \param isLike true 点赞 false 取消点赞
///
/// \param completed 成功与否
///
- (void)likeAlbumResouceRequestWithAlbumID:(NSInteger)albumID isLike:(BOOL)isLike completed:(void (^ _Nonnull)(BOOL, NSString * _Nonnull))completed;
/// 调用起来SDK的相册显示的控件
/// \param albums 当前的相册资源
///
/// \param index 当前显示的下标
///
/// \param showUserId 显示当前相册所属的用户id
///
- (void)showPhotoAlbumListWithAlbums:(NSArray<NSDictionary<NSString *, id> *> * _Nonnull)albums index:(NSInteger)index showUserId:(int64_t)showUserId;
/// 好友的申请与解除
/// \param userId 用户
///
/// \param isRemove true 解除好友， false 申请好友
///
/// \param completed completed description
///
- (void)updateFriendShipWithUserId:(int64_t)userId isRemove:(BOOL)isRemove completed:(void (^ _Nullable)(BOOL, NSInteger))completed;
@end





@interface DLGameSDKManager (SWIFT_EXTENSION(DLGameSDK))
/// 用户进入当前房间
/// \param roomId 语音房的id
///
/// \param enterType 进入房间的类型
///
/// \param invirerUid 如果是从外链分享进入，传这个id
///
/// \param extraAction 传到语音房的扩展字段
///
///
/// returns:
/// 返回进房是否成功
- (BOOL)startEnterVoiceRoomWithRoomId:(NSString * _Nonnull)roomId enterType:(enum DLEnterVoiceRoomType)enterType invirerUid:(int64_t)invirerUid extraAction:(NSString * _Nonnull)extraAction SWIFT_WARN_UNUSED_RESULT;
/// 退出语音房的类型
/// \param exitType 当前的类型
///
- (BOOL)didExitVoiceRoomWithExitType:(enum DLExitVoiceRoomType)exitType SWIFT_WARN_UNUSED_RESULT;
/// 是否强制只是隐藏语音房的内容，不做退房的操作
- (void)didForceVoiceRoomContentShowWithShow:(BOOL)show;
/// 是否收起语音房
/// \param folder 是否收起
///
- (void)updateVoiceRoomFolderWithFolder:(BOOL)folder;
/// 是否开启声音控制
/// \param openControl 是否开启管理语音房声音 yes是开启，no是关闭
///
- (BOOL)updateVoiceRoomSoundsStatusWithOpenControl:(BOOL)openControl SWIFT_WARN_UNUSED_RESULT;
/// 是否开启了这个控制
///
/// returns:
/// 返回
- (BOOL)getCurrentVoiceSoundControl SWIFT_WARN_UNUSED_RESULT;
/// 获取局内邀请开关
- (BOOL)getInGameInvitationsSwitch SWIFT_WARN_UNUSED_RESULT;
/// 展示语音房的局内邀请列表
- (void)showVoiceRoomInvitationController;
/// 收起和/放开游戏局内邀请列表
/// \param isUnFold 是否是展开的状态
///
- (void)updateGameRoomInviteListViewFlodStatus:(BOOL)isUnFold;
/// 显示/隐藏游戏局内邀请列表
/// \param show 外部控制游戏局内的邀请列表的显示和隐藏 yes显示。no隐藏
///
- (void)showGameRoomInviteListViewWithShow:(BOOL)show;
@end


SWIFT_PROTOCOL_NAMED("DLGameSDKManagerDelegate")
@protocol DLGameSDKManagerDelegate <NSObject>
/// 初始化SDK的结果回掉
/// \param success 初始化结果的callBack
///
/// \param errCode 如果有错误，返回错误码
///
/// \param errMsg 如果有错误，返回错误描述
///
- (void)sdkInitResultCallBackWithSuccess:(BOOL)success errCode:(NSInteger)errCode errMsg:(NSString * _Nonnull)errMsg;
/// 当前登录的用户信息发生了改变
/// 用户的信息
/// \param userInfo 用户模型
///
- (void)loginUserInfoDidChangedWithUserInfo:(DLGameSDKUser * _Nonnull)userInfo;
/// 判断当前分享到line
/// \param shareInfo 分享的信息
///
///
/// returns:
/// 是否有权限
- (BOOL)sdkShareLineAuthorizedWithShareInfo:(NSDictionary<NSString *, id> * _Nonnull)shareInfo checkEnable:(BOOL)checkEnable SWIFT_WARN_UNUSED_RESULT;
/// 判断当前分享到facebook
/// \param shareInfo 分享的信息
///
///
/// returns:
/// 是否有权限
- (BOOL)sdkShareFaceBookAuthorizedWithShareInfo:(NSDictionary<NSString *, id> * _Nonnull)shareInfo checkEnable:(BOOL)checkEnable SWIFT_WARN_UNUSED_RESULT;
/// 分享语音房，生成一个url链接
/// \param shareInfo 分享的信息
///
- (NSString * _Nonnull)sdkShareVoiceRoomLinkUrlWithShareInfo:(NSDictionary<NSString *, id> * _Nonnull)shareInfo SWIFT_WARN_UNUSED_RESULT;
/// 需要弹出充值接口
/// \param type 充值类型 3钻石，4 点券
///
- (void)sdkNeedTopUpCallBackWithType:(NSInteger)type;
/// 用户的RTC状态，发生了改变
/// \param state 状态
///
- (void)sdkRTCStateDidChangedCallBackWithStateInfo:(NSDictionary<NSString *, id> * _Nonnull)stateInfo;
/// 收到在会话列表需要跳转游戏的代理
/// \param extData 额外信息
///
- (void)sdkDidReceiveExtGameDataCallBackWithExtData:(NSDictionary<NSString *, id> * _Nonnull)extData;
/// 在游戏对局中，设置礼物面板的显示和隐藏
/// \param show 显示还是隐藏
///
- (void)sdkGameRoomGiftPanelShowWithShow:(BOOL)show;
/// 更新当前会话的未读数
- (void)sdkDidRecieveNewMsgCallBackWithUnReadCount:(int64_t)unReadCount;
/// 用户掉线，或者被其他用户挤出账号
- (void)sdkUserOffLineCallBack;
/// 收到新的送礼通知
/// \param msgCount 不在广场页面收到的消息个数
///
- (void)sdkDidReceiveGiftMsgNotificationWithMsgCount:(NSInteger)msgCount;
/// 收到了新的广播礼物（跑马灯）
/// \param giftInfo 广播礼物信息（跑马灯）
///
- (void)sdkDidReceiveGiftBroadcastMsgWithGiftInfo:(NSDictionary<NSString *, id> * _Nonnull)giftInfo;
/// 新增局内收礼信息同步游戏的代理方法（游戏收到后播放轨道动画）
/// \param giftInfo 收礼信息
///
- (void)sdkDidInGameReceiveGiftInfoMsgWithGiftInfo:(NSDictionary<NSString *, id> * _Nonnull)giftInfo;
/// SDK隐藏的callBack
- (void)sdkDidHiddenMainWindow;
/// 从内部调用进入语音房
/// \param roomId 当前房间的id
///
- (void)sdkDidEnterVoiceRoomWithRoomId:(NSString * _Nonnull)roomId enterType:(enum DLEnterVoiceRoomType)enterType inviteId:(int64_t)inviteId;
/// 点击弹窗，关闭了语音房
- (void)sdkAlertExitVoiceRoomHiddenMainWindowWithExitType:(enum DLExitVoiceRoomType)exitType exitRoomId:(NSString * _Nonnull)exitRoomId;
/// 是否开启了语音房的声音管理
/// \param openControl 是否开启了
///
- (void)sdkDidUpdateVoiceRoomSoundControlWithOpenControl:(BOOL)openControl;
/// 在游戏内，通过h5送礼,成功之后的通知消息
- (void)sdkGameRoomCPSendGiftResultNotificationWithResult:(NSInteger)result errorMsg:(NSString * _Nonnull)errorMsg;
/// 当前为了统计在单个聊天页面的红包的首发情况
/// \param send 是否是发送，如果是fale表示接受
///
/// \param diamondCoung 获取到的钻石数量
///
- (void)sdkGameRoomSingleChatRedPackageInfoCallBackWithSend:(BOOL)send diamondCoung:(NSInteger)diamondCoung;
/// 使用游戏侧显示用户的详细信息
/// \param userId 用户的id
///
/// \param gameId 游戏的id
///
- (void)sdkNeedShowUserProfilePageViewWithUserId:(NSString * _Nonnull)userId gameId:(NSString * _Nonnull)gameId;
/// sdk返回一些信息给到调用房
/// \param errorCode 错误码
///
/// \param errMsg 错误描述
///
- (void)sdkErrorCallBackWithErrorCode:(NSInteger)errorCode errMsg:(NSString * _Nonnull)errMsg;
/// 关闭外部声音
/// \param mute 是否静音 会有微弱的
///
/// \param zeroValue 是否设置为0值
///
- (void)sdkMuteExternalVoiceWithMute:(BOOL)mute zeroValue:(BOOL)zeroValue;
/// 更新当前的用户余额
/// \param currency 货币的类型
///
/// \param amount 货币剩下的额度
///
- (void)sdkUpdateLoginUserCurrencyAmountWithCurrency:(NSString * _Nonnull)currency amount:(NSString * _Nonnull)amount;
@end


SWIFT_CLASS("_TtC9DLGameSDK19DLGameSDKOnlineInfo")
@interface DLGameSDKOnlineInfo : NSObject
@property (nonatomic) NSInteger isOnline;
@property (nonatomic) NSInteger playStatus;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 用户标签信息
SWIFT_CLASS("_TtC9DLGameSDK22DLGameSDKOperationInfo")
@interface DLGameSDKOperationInfo : NSObject
/// 用户标签,1普通用户，2v8用户，3v10用户，4陪玩师，5牌咖
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable idTags;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DLGameSDKUserAccount;

SWIFT_CLASS("_TtC9DLGameSDK26DLGameSDKSocialAccountInfo")
@interface DLGameSDKSocialAccountInfo : NSObject
/// line账号
@property (nonatomic, strong) DLGameSDKUserAccount * _Nullable line;
/// facebook账号
@property (nonatomic, strong) DLGameSDKUserAccount * _Nullable facebook;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DLGameSDKUserVoiceInfo;
@class DLGameSDKUserRelationInfo;

/// 用户的基本的信息
SWIFT_CLASS("_TtC9DLGameSDK13DLGameSDKUser")
@interface DLGameSDKUser : NSObject
@property (nonatomic) int64_t userId;
/// 即时通讯 imid
@property (nonatomic, copy) NSString * _Nullable imid;
/// 用户的第三方id
@property (nonatomic, copy) NSString * _Nullable thirdUserId;
/// 信息是否已经完善 1是已经完善
@property (nonatomic) NSInteger profileStatus;
/// 用户昵称
@property (nonatomic, copy) NSString * _Nullable nickname;
/// 用户头像
@property (nonatomic, copy) NSString * _Nullable avatar;
/// 用户个人简介
@property (nonatomic, copy) NSString * _Nullable introduction;
/// 用户年纪
@property (nonatomic) NSInteger age;
/// 用户//性别   0女 1男 -1 未设置
@property (nonatomic) NSInteger sex;
/// 用户身高
@property (nonatomic) NSInteger height;
/// 用户体重
@property (nonatomic) NSInteger weight;
/// 用户状态  0正常  1封号
@property (nonatomic) NSInteger status;
/// 绑定当前用户的邀请码
@property (nonatomic, copy) NSString * _Nullable inviteCode;
/// 职业
@property (nonatomic, copy) NSString * _Nullable occupation;
/// 用户的在线状态
@property (nonatomic, strong) DLGameSDKOnlineInfo * _Nullable onlineInfo;
/// 用户的声音信息
@property (nonatomic, strong) DLGameSDKUserVoiceInfo * _Nullable voiceInfo;
/// 当前好友的关系
@property (nonatomic, strong) DLGameSDKUserRelationInfo * _Nullable relationInfo;
/// 用户的标签
@property (nonatomic, strong) DLGameSDKOperationInfo * _Nullable operatorInfo;
/// 成就等级信息
@property (nonatomic, strong) DLGameSDKAchievementInfo * _Nullable achievementInfo;
/// 用户社交信息
@property (nonatomic, strong) DLGameSDKSocialAccountInfo * _Nullable socialAccount;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 用户第三方賬號信息
SWIFT_CLASS("_TtC9DLGameSDK20DLGameSDKUserAccount")
@interface DLGameSDKUserAccount : NSObject
/// id
@property (nonatomic, copy) NSString * _Nullable content;
/// 绑定与否
@property (nonatomic) NSInteger bindingState;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 用户的好友关系
SWIFT_CLASS("_TtC9DLGameSDK25DLGameSDKUserRelationInfo")
@interface DLGameSDKUserRelationInfo : NSObject
/// 当前好友关系 0 非好友，1 好友 2 申请中
@property (nonatomic) NSInteger relation;
/// 是否已经拉黑
@property (nonatomic) NSInteger isBlock;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 用户的声音信息
SWIFT_CLASS("_TtC9DLGameSDK22DLGameSDKUserVoiceInfo")
@interface DLGameSDKUserVoiceInfo : NSObject
/// //录音地址，不带域名
@property (nonatomic, copy) NSString * _Nullable voiceUrl;
/// 录音时长，秒
@property (nonatomic) NSInteger duration;
/// 录过音审核状态 0等待审核 1通过 2未通过
@property (nonatomic) NSInteger status;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end





SWIFT_CLASS("_TtC9DLGameSDK19RTCVideoEventObject")
@interface RTCVideoEventObject : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

























@class UIImage;
@class UIView;

/// Provide an image sticker container view that conform to this protocol must be a subclass of UIView
/// 必须是UIView的子类遵循这个协议
SWIFT_PROTOCOL("_TtP9DLGameSDK31ZLImageStickerContainerDelegate_")
@protocol ZLImageStickerContainerDelegate
@property (nonatomic, copy) void (^ _Nullable selectImageBlock)(UIImage * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable hideBlock)(void);
- (void)showIn:(UIView * _Nonnull)view;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
